{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./src/components/Project.js","webpack:///./src/components/Projects.js"],"names":["query","ProjectsPage","projects","data","allStrapiProjects","nodes","className","title","Project","description","github","stack","url","image","index","fluid","childImageSharp","map","item","key","id","href","Projects","showLink","Title","project","to"],"mappings":"6FAAA,8FAoBaA,EAAK,aAyBHC,UAvCM,SAAC,GAIf,IAFyBC,EAE1B,EAHJC,KACEC,kBAAqBC,MAGvB,OACE,kBAAC,IAAD,KACE,6BAASC,UAAU,iBACjB,kBAAC,IAAD,CAAUJ,SAAUA,EAAUK,MAAM,qB,kHCyB7BC,EAnCC,SAAC,GAA8D,IAA5DC,EAA2D,EAA3DA,YAAaF,EAA8C,EAA9CA,MAAOG,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAChE,OACE,6BAASR,UAAU,WACjB,kBAAC,IAAD,CAAOS,MAAOF,EAAMG,gBAAgBD,MAAOT,UAAU,gBACrD,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,iBAAhB,IAAkCQ,EAAQ,EAA1C,KACA,4BAAKP,GACL,uBAAGD,UAAU,gBAAgBG,GAC7B,yBAAKH,UAAU,iBACZK,EAAMM,KAAI,SAAAC,GACT,OAAO,0BAAMC,IAAKD,EAAKE,IAAKF,EAAKX,WAGrC,yBAAKD,UAAU,iBACb,uBAAGe,KAAMX,GACP,kBAAC,IAAD,CAAgBJ,UAAU,kBAE5B,uBAAGe,KAAMT,GACP,kBAAC,IAAD,CAAeN,UAAU,sB,YCAtBgB,IAlBE,SAAC,GAAmC,IAAjCpB,EAAgC,EAAhCA,SAAUK,EAAsB,EAAtBA,MAAOgB,EAAe,EAAfA,SACnC,OACE,6BAASjB,UAAU,oBACjB,kBAACkB,EAAA,EAAD,CAAOjB,MAAOA,IACd,yBAAKD,UAAU,kCACZJ,EAASe,KAAI,SAACQ,EAASX,GACtB,OAAO,kBAAC,EAAD,eAASK,IAAKM,EAAQL,GAAIN,MAAOA,GAAWW,QAGtDF,GACC,kBAAC,IAAD,CAAMG,GAAG,YAAYpB,UAAU,kBAA/B","file":"component---src-pages-projects-js-e40cf1a3d125f0659b22.js","sourcesContent":["import React from \"react\"\nimport Layout from \"../components/Layout\"\nimport { graphql } from \"gatsby\"\nimport Projects from \"../components/Projects\"\n// ...GatsbyImageSharpFluid\n\nconst ProjectsPage = ({\n  data: {\n    allStrapiProjects: { nodes: projects },\n  },\n}) => {\n  return (\n    <Layout>\n      <section className=\"projects-page\">\n        <Projects projects={projects} title=\"all projects\" />\n      </section>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  {\n    allStrapiProjects {\n      nodes {\n        featured\n        id\n        description\n        title\n        url\n        image {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        stack {\n          id\n          title\n        }\n      }\n    }\n  }\n`\n\nexport default ProjectsPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Image from \"gatsby-image\"\nimport { FaGithubSquare, FaShareSquare } from \"react-icons/fa\"\nconst Project = ({ description, title, github, stack, url, image, index }) => {\n  return (\n    <article className=\"project\">\n      <Image fluid={image.childImageSharp.fluid} className=\"project-img\" />\n      <div className=\"project-info\">\n        <span className=\"projet-number\">0{index + 1}.</span>\n        <h3>{title}</h3>\n        <p className=\"project-desc\">{description}</p>\n        <div className=\"project-stack\">\n          {stack.map(item => {\n            return <span key={item.id}>{item.title}</span>\n          })}\n        </div>\n        <div className=\"project-links\">\n          <a href={github}>\n            <FaGithubSquare className=\"project-icon\" />\n          </a>\n          <a href={url}>\n            <FaShareSquare className=\"project-icon\" />\n          </a>\n        </div>\n      </div>\n    </article>\n  )\n}\n\nProject.propTypes = {\n  title:PropTypes.string.isRequired,\n  github:PropTypes.string.isRequired,\n  url:PropTypes.string.isRequired,\n  description:PropTypes.string.isRequired,\n  stack:PropTypes.arrayOf(PropTypes.object).isRequired,\n  image:PropTypes.object.isRequired,\n}\n\nexport default Project\n","import React from \"react\"\nimport Title from \"./Title\"\nimport Project from \"./Project\"\nimport { Link } from \"gatsby\"\nconst Projects = ({ projects, title, showLink }) => {\n  return (\n    <section className=\"section projects\">\n      <Title title={title} />\n      <div className=\"section-center projects-center\">\n        {projects.map((project, index) => {\n          return <Project key={project.id} index={index} {...project} />\n        })}\n      </div>\n      {showLink && (\n        <Link to=\"/projects\" className=\"btn center-btn\">\n          projects\n        </Link>\n      )}\n    </section>\n  )\n}\n\nexport default Projects\n"],"sourceRoot":""}